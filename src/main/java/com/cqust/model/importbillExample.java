package com.cqust.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class importbillExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public importbillExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andImortbillidIsNull() {
            addCriterion("imortBillID is null");
            return (Criteria) this;
        }

        public Criteria andImortbillidIsNotNull() {
            addCriterion("imortBillID is not null");
            return (Criteria) this;
        }

        public Criteria andImortbillidEqualTo(String value) {
            addCriterion("imortBillID =", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidNotEqualTo(String value) {
            addCriterion("imortBillID <>", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidGreaterThan(String value) {
            addCriterion("imortBillID >", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidGreaterThanOrEqualTo(String value) {
            addCriterion("imortBillID >=", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidLessThan(String value) {
            addCriterion("imortBillID <", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidLessThanOrEqualTo(String value) {
            addCriterion("imortBillID <=", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidLike(String value) {
            addCriterion("imortBillID like", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidNotLike(String value) {
            addCriterion("imortBillID not like", value, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidIn(List<String> values) {
            addCriterion("imortBillID in", values, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidNotIn(List<String> values) {
            addCriterion("imortBillID not in", values, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidBetween(String value1, String value2) {
            addCriterion("imortBillID between", value1, value2, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andImortbillidNotBetween(String value1, String value2) {
            addCriterion("imortBillID not between", value1, value2, "imortbillid");
            return (Criteria) this;
        }

        public Criteria andMerchidIsNull() {
            addCriterion("merchID is null");
            return (Criteria) this;
        }

        public Criteria andMerchidIsNotNull() {
            addCriterion("merchID is not null");
            return (Criteria) this;
        }

        public Criteria andMerchidEqualTo(String value) {
            addCriterion("merchID =", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidNotEqualTo(String value) {
            addCriterion("merchID <>", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidGreaterThan(String value) {
            addCriterion("merchID >", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidGreaterThanOrEqualTo(String value) {
            addCriterion("merchID >=", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidLessThan(String value) {
            addCriterion("merchID <", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidLessThanOrEqualTo(String value) {
            addCriterion("merchID <=", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidLike(String value) {
            addCriterion("merchID like", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidNotLike(String value) {
            addCriterion("merchID not like", value, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidIn(List<String> values) {
            addCriterion("merchID in", values, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidNotIn(List<String> values) {
            addCriterion("merchID not in", values, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidBetween(String value1, String value2) {
            addCriterion("merchID between", value1, value2, "merchid");
            return (Criteria) this;
        }

        public Criteria andMerchidNotBetween(String value1, String value2) {
            addCriterion("merchID not between", value1, value2, "merchid");
            return (Criteria) this;
        }

        public Criteria andProfferidIsNull() {
            addCriterion("profferID is null");
            return (Criteria) this;
        }

        public Criteria andProfferidIsNotNull() {
            addCriterion("profferID is not null");
            return (Criteria) this;
        }

        public Criteria andProfferidEqualTo(String value) {
            addCriterion("profferID =", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidNotEqualTo(String value) {
            addCriterion("profferID <>", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidGreaterThan(String value) {
            addCriterion("profferID >", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidGreaterThanOrEqualTo(String value) {
            addCriterion("profferID >=", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidLessThan(String value) {
            addCriterion("profferID <", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidLessThanOrEqualTo(String value) {
            addCriterion("profferID <=", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidLike(String value) {
            addCriterion("profferID like", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidNotLike(String value) {
            addCriterion("profferID not like", value, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidIn(List<String> values) {
            addCriterion("profferID in", values, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidNotIn(List<String> values) {
            addCriterion("profferID not in", values, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidBetween(String value1, String value2) {
            addCriterion("profferID between", value1, value2, "profferid");
            return (Criteria) this;
        }

        public Criteria andProfferidNotBetween(String value1, String value2) {
            addCriterion("profferID not between", value1, value2, "profferid");
            return (Criteria) this;
        }

        public Criteria andImportpriceIsNull() {
            addCriterion("importPrice is null");
            return (Criteria) this;
        }

        public Criteria andImportpriceIsNotNull() {
            addCriterion("importPrice is not null");
            return (Criteria) this;
        }

        public Criteria andImportpriceEqualTo(Double value) {
            addCriterion("importPrice =", value, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceNotEqualTo(Double value) {
            addCriterion("importPrice <>", value, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceGreaterThan(Double value) {
            addCriterion("importPrice >", value, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("importPrice >=", value, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceLessThan(Double value) {
            addCriterion("importPrice <", value, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceLessThanOrEqualTo(Double value) {
            addCriterion("importPrice <=", value, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceIn(List<Double> values) {
            addCriterion("importPrice in", values, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceNotIn(List<Double> values) {
            addCriterion("importPrice not in", values, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceBetween(Double value1, Double value2) {
            addCriterion("importPrice between", value1, value2, "importprice");
            return (Criteria) this;
        }

        public Criteria andImportpriceNotBetween(Double value1, Double value2) {
            addCriterion("importPrice not between", value1, value2, "importprice");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNull() {
            addCriterion("quantity is null");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNotNull() {
            addCriterion("quantity is not null");
            return (Criteria) this;
        }

        public Criteria andQuantityEqualTo(Integer value) {
            addCriterion("quantity =", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotEqualTo(Integer value) {
            addCriterion("quantity <>", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThan(Integer value) {
            addCriterion("quantity >", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("quantity >=", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityLessThan(Integer value) {
            addCriterion("quantity <", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityLessThanOrEqualTo(Integer value) {
            addCriterion("quantity <=", value, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityIn(List<Integer> values) {
            addCriterion("quantity in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotIn(List<Integer> values) {
            addCriterion("quantity not in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityBetween(Integer value1, Integer value2) {
            addCriterion("quantity between", value1, value2, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotBetween(Integer value1, Integer value2) {
            addCriterion("quantity not between", value1, value2, "quantity");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyIsNull() {
            addCriterion("totalMoney is null");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyIsNotNull() {
            addCriterion("totalMoney is not null");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyEqualTo(Double value) {
            addCriterion("totalMoney =", value, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyNotEqualTo(Double value) {
            addCriterion("totalMoney <>", value, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyGreaterThan(Double value) {
            addCriterion("totalMoney >", value, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("totalMoney >=", value, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyLessThan(Double value) {
            addCriterion("totalMoney <", value, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyLessThanOrEqualTo(Double value) {
            addCriterion("totalMoney <=", value, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyIn(List<Double> values) {
            addCriterion("totalMoney in", values, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyNotIn(List<Double> values) {
            addCriterion("totalMoney not in", values, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyBetween(Double value1, Double value2) {
            addCriterion("totalMoney between", value1, value2, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andTotalmoneyNotBetween(Double value1, Double value2) {
            addCriterion("totalMoney not between", value1, value2, "totalmoney");
            return (Criteria) this;
        }

        public Criteria andImportdateIsNull() {
            addCriterion("importDate is null");
            return (Criteria) this;
        }

        public Criteria andImportdateIsNotNull() {
            addCriterion("importDate is not null");
            return (Criteria) this;
        }

        public Criteria andImportdateEqualTo(Date value) {
            addCriterion("importDate =", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateNotEqualTo(Date value) {
            addCriterion("importDate <>", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateGreaterThan(Date value) {
            addCriterion("importDate >", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateGreaterThanOrEqualTo(Date value) {
            addCriterion("importDate >=", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateLessThan(Date value) {
            addCriterion("importDate <", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateLessThanOrEqualTo(Date value) {
            addCriterion("importDate <=", value, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateIn(List<Date> values) {
            addCriterion("importDate in", values, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateNotIn(List<Date> values) {
            addCriterion("importDate not in", values, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateBetween(Date value1, Date value2) {
            addCriterion("importDate between", value1, value2, "importdate");
            return (Criteria) this;
        }

        public Criteria andImportdateNotBetween(Date value1, Date value2) {
            addCriterion("importDate not between", value1, value2, "importdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table importbill
     *
     * @mbg.generated do_not_delete_during_merge Fri Mar 13 11:23:59 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table importbill
     *
     * @mbg.generated Fri Mar 13 11:23:59 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}